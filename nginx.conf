user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip on;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    gzip_static on;

    include /etc/nginx/conf.d/*.conf;

    # 因为下方进行了 websocket 的代理，使用到了 connection_upgrade，所以此处需要进行相应映射
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # http to https for radtool.cn
    server {
        listen       80;
        server_name  radtool.cn www.radtool.cn;
        return 301 https://$host$request_uri;
    }

    # http to https for all addresses
    server {
        listen       80;
        server_name  _;
        return 301 https://$host$request_uri;
    }

    # # www.radtool.cn to radtool.cn
    # server {
    #     listen       443 ssl;
    #     server_name  www.radtool.cn;

    #     # 即使是重定向，也需要设置 ssl_certificate 和 ssl_certificate_key
    #     ssl_certificate /etc/nginx/acme.sh/radtool.cn.cer;
    #     ssl_certificate_key /etc/nginx/acme.sh/radtool.cn.key;

    #     return 301 https://radtool.cn;
    # }

    # radtool.cn
    server {
        listen       443 ssl;
        server_name  radtool.cn www.radtool.cn;

        ssl_certificate /etc/nginx/acme.sh/radtool.cn.cer;
        ssl_certificate_key /etc/nginx/acme.sh/radtool.cn.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

        client_max_body_size 1024m;

        # Redirect all requests to radtool.cn
        if ($host = www.radtool.cn) {
            return 301 https://radtool.cn$request_uri;
        }

        location / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://111.231.140.34:8010;
        }

        location /api {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://111.231.140.34:8011;
        }
    }

    # task.radtool.cn
    server {
        listen       443 ssl;
        server_name  task.radtool.cn;

        ssl_certificate /etc/nginx/acme.sh/radtool.cn.cer;
        ssl_certificate_key /etc/nginx/acme.sh/radtool.cn.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

        client_max_body_size 1024m;

        location / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://111.231.140.34:8020;
        }

        location /api {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://111.231.140.34:8021;
        }

        location /ws {
            proxy_pass http://111.231.140.34:8021;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            # 下面这两行是关键
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
